"use strict";
/**
 * Files
 * Upload and manage files.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCategory = void 0;
class ErrorCategory {
    static getAttributeTypeMap() {
        return ErrorCategory.attributeTypeMap;
    }
}
exports.ErrorCategory = ErrorCategory;
ErrorCategory.discriminator = undefined;
ErrorCategory.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "httpStatus",
        "baseName": "httpStatus",
        "type": "ErrorCategory.HttpStatusEnum"
    }
];
(function (ErrorCategory) {
    let HttpStatusEnum;
    (function (HttpStatusEnum) {
        HttpStatusEnum[HttpStatusEnum["Continue"] = 'CONTINUE'] = "Continue";
        HttpStatusEnum[HttpStatusEnum["SwitchingProtocols"] = 'SWITCHING_PROTOCOLS'] = "SwitchingProtocols";
        HttpStatusEnum[HttpStatusEnum["Processing"] = 'PROCESSING'] = "Processing";
        HttpStatusEnum[HttpStatusEnum["Ok"] = 'OK'] = "Ok";
        HttpStatusEnum[HttpStatusEnum["Created"] = 'CREATED'] = "Created";
        HttpStatusEnum[HttpStatusEnum["Accepted"] = 'ACCEPTED'] = "Accepted";
        HttpStatusEnum[HttpStatusEnum["NonAuthoritativeInformation"] = 'NON_AUTHORITATIVE_INFORMATION'] = "NonAuthoritativeInformation";
        HttpStatusEnum[HttpStatusEnum["NoContent"] = 'NO_CONTENT'] = "NoContent";
        HttpStatusEnum[HttpStatusEnum["ResetContent"] = 'RESET_CONTENT'] = "ResetContent";
        HttpStatusEnum[HttpStatusEnum["PartialContent"] = 'PARTIAL_CONTENT'] = "PartialContent";
        HttpStatusEnum[HttpStatusEnum["MultiStatus"] = 'MULTI_STATUS'] = "MultiStatus";
        HttpStatusEnum[HttpStatusEnum["AlreadyReported"] = 'ALREADY_REPORTED'] = "AlreadyReported";
        HttpStatusEnum[HttpStatusEnum["ImUsed"] = 'IM_USED'] = "ImUsed";
        HttpStatusEnum[HttpStatusEnum["MultipleChoices"] = 'MULTIPLE_CHOICES'] = "MultipleChoices";
        HttpStatusEnum[HttpStatusEnum["MovedPermanently"] = 'MOVED_PERMANENTLY'] = "MovedPermanently";
        HttpStatusEnum[HttpStatusEnum["Found"] = 'FOUND'] = "Found";
        HttpStatusEnum[HttpStatusEnum["SeeOther"] = 'SEE_OTHER'] = "SeeOther";
        HttpStatusEnum[HttpStatusEnum["NotModified"] = 'NOT_MODIFIED'] = "NotModified";
        HttpStatusEnum[HttpStatusEnum["UseProxy"] = 'USE_PROXY'] = "UseProxy";
        HttpStatusEnum[HttpStatusEnum["TemporaryRedirect"] = 'TEMPORARY_REDIRECT'] = "TemporaryRedirect";
        HttpStatusEnum[HttpStatusEnum["PermanentRedirect"] = 'PERMANENT_REDIRECT'] = "PermanentRedirect";
        HttpStatusEnum[HttpStatusEnum["BadRequest"] = 'BAD_REQUEST'] = "BadRequest";
        HttpStatusEnum[HttpStatusEnum["Unauthorized"] = 'UNAUTHORIZED'] = "Unauthorized";
        HttpStatusEnum[HttpStatusEnum["PaymentRequired"] = 'PAYMENT_REQUIRED'] = "PaymentRequired";
        HttpStatusEnum[HttpStatusEnum["Forbidden"] = 'FORBIDDEN'] = "Forbidden";
        HttpStatusEnum[HttpStatusEnum["NotFound"] = 'NOT_FOUND'] = "NotFound";
        HttpStatusEnum[HttpStatusEnum["MethodNotAllowed"] = 'METHOD_NOT_ALLOWED'] = "MethodNotAllowed";
        HttpStatusEnum[HttpStatusEnum["NotAcceptable"] = 'NOT_ACCEPTABLE'] = "NotAcceptable";
        HttpStatusEnum[HttpStatusEnum["ProxyAuthenticationRequired"] = 'PROXY_AUTHENTICATION_REQUIRED'] = "ProxyAuthenticationRequired";
        HttpStatusEnum[HttpStatusEnum["RequestTimeout"] = 'REQUEST_TIMEOUT'] = "RequestTimeout";
        HttpStatusEnum[HttpStatusEnum["Conflict"] = 'CONFLICT'] = "Conflict";
        HttpStatusEnum[HttpStatusEnum["Gone"] = 'GONE'] = "Gone";
        HttpStatusEnum[HttpStatusEnum["LengthRequired"] = 'LENGTH_REQUIRED'] = "LengthRequired";
        HttpStatusEnum[HttpStatusEnum["PreconditionFailed"] = 'PRECONDITION_FAILED'] = "PreconditionFailed";
        HttpStatusEnum[HttpStatusEnum["RequestEntityTooLarge"] = 'REQUEST_ENTITY_TOO_LARGE'] = "RequestEntityTooLarge";
        HttpStatusEnum[HttpStatusEnum["RequestUriTooLong"] = 'REQUEST_URI_TOO_LONG'] = "RequestUriTooLong";
        HttpStatusEnum[HttpStatusEnum["UnsupportedMediaType"] = 'UNSUPPORTED_MEDIA_TYPE'] = "UnsupportedMediaType";
        HttpStatusEnum[HttpStatusEnum["RequestedRangeNotSatisfiable"] = 'REQUESTED_RANGE_NOT_SATISFIABLE'] = "RequestedRangeNotSatisfiable";
        HttpStatusEnum[HttpStatusEnum["ExpectationFailed"] = 'EXPECTATION_FAILED'] = "ExpectationFailed";
        HttpStatusEnum[HttpStatusEnum["ImATeapot"] = 'IM_A_TEAPOT'] = "ImATeapot";
        HttpStatusEnum[HttpStatusEnum["MisdirectedRequest"] = 'MISDIRECTED_REQUEST'] = "MisdirectedRequest";
        HttpStatusEnum[HttpStatusEnum["UnprocessableEntity"] = 'UNPROCESSABLE_ENTITY'] = "UnprocessableEntity";
        HttpStatusEnum[HttpStatusEnum["Locked"] = 'LOCKED'] = "Locked";
        HttpStatusEnum[HttpStatusEnum["FailedDependency"] = 'FAILED_DEPENDENCY'] = "FailedDependency";
        HttpStatusEnum[HttpStatusEnum["UpgradeRequired"] = 'UPGRADE_REQUIRED'] = "UpgradeRequired";
        HttpStatusEnum[HttpStatusEnum["PreconditionRequired"] = 'PRECONDITION_REQUIRED'] = "PreconditionRequired";
        HttpStatusEnum[HttpStatusEnum["TooManyRequests"] = 'TOO_MANY_REQUESTS'] = "TooManyRequests";
        HttpStatusEnum[HttpStatusEnum["RequestHeadersFieldsTooLarge"] = 'REQUEST_HEADERS_FIELDS_TOO_LARGE'] = "RequestHeadersFieldsTooLarge";
        HttpStatusEnum[HttpStatusEnum["InternalStaleServiceDiscovery"] = 'INTERNAL_STALE_SERVICE_DISCOVERY'] = "InternalStaleServiceDiscovery";
        HttpStatusEnum[HttpStatusEnum["UnavailableForLegalReasons"] = 'UNAVAILABLE_FOR_LEGAL_REASONS'] = "UnavailableForLegalReasons";
        HttpStatusEnum[HttpStatusEnum["InternalServerError"] = 'INTERNAL_SERVER_ERROR'] = "InternalServerError";
        HttpStatusEnum[HttpStatusEnum["NotImplemented"] = 'NOT_IMPLEMENTED'] = "NotImplemented";
        HttpStatusEnum[HttpStatusEnum["BadGateway"] = 'BAD_GATEWAY'] = "BadGateway";
        HttpStatusEnum[HttpStatusEnum["ServiceUnavailable"] = 'SERVICE_UNAVAILABLE'] = "ServiceUnavailable";
        HttpStatusEnum[HttpStatusEnum["GatewayTimeout"] = 'GATEWAY_TIMEOUT'] = "GatewayTimeout";
        HttpStatusEnum[HttpStatusEnum["HttpVersionNotSupported"] = 'HTTP_VERSION_NOT_SUPPORTED'] = "HttpVersionNotSupported";
        HttpStatusEnum[HttpStatusEnum["VariantAlsoNegotiates"] = 'VARIANT_ALSO_NEGOTIATES'] = "VariantAlsoNegotiates";
        HttpStatusEnum[HttpStatusEnum["InsufficientStorage"] = 'INSUFFICIENT_STORAGE'] = "InsufficientStorage";
        HttpStatusEnum[HttpStatusEnum["LoopDetected"] = 'LOOP_DETECTED'] = "LoopDetected";
        HttpStatusEnum[HttpStatusEnum["NotExtended"] = 'NOT_EXTENDED'] = "NotExtended";
        HttpStatusEnum[HttpStatusEnum["NetworkAuthenticationRequired"] = 'NETWORK_AUTHENTICATION_REQUIRED'] = "NetworkAuthenticationRequired";
    })(HttpStatusEnum = ErrorCategory.HttpStatusEnum || (ErrorCategory.HttpStatusEnum = {}));
})(ErrorCategory = exports.ErrorCategory || (exports.ErrorCategory = {}));
