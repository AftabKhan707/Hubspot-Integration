"use strict";
/**
 * Files
 * Upload and manage files.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportFromUrlInput = void 0;
class ImportFromUrlInput {
    static getAttributeTypeMap() {
        return ImportFromUrlInput.attributeTypeMap;
    }
}
exports.ImportFromUrlInput = ImportFromUrlInput;
ImportFromUrlInput.discriminator = undefined;
ImportFromUrlInput.attributeTypeMap = [
    {
        "name": "access",
        "baseName": "access",
        "type": "ImportFromUrlInput.AccessEnum"
    },
    {
        "name": "ttl",
        "baseName": "ttl",
        "type": "string"
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "folderId",
        "baseName": "folderId",
        "type": "string"
    },
    {
        "name": "folderPath",
        "baseName": "folderPath",
        "type": "string"
    },
    {
        "name": "duplicateValidationStrategy",
        "baseName": "duplicateValidationStrategy",
        "type": "ImportFromUrlInput.DuplicateValidationStrategyEnum"
    },
    {
        "name": "duplicateValidationScope",
        "baseName": "duplicateValidationScope",
        "type": "ImportFromUrlInput.DuplicateValidationScopeEnum"
    },
    {
        "name": "overwrite",
        "baseName": "overwrite",
        "type": "boolean"
    }
];
(function (ImportFromUrlInput) {
    let AccessEnum;
    (function (AccessEnum) {
        AccessEnum[AccessEnum["PublicIndexable"] = 'PUBLIC_INDEXABLE'] = "PublicIndexable";
        AccessEnum[AccessEnum["PublicNotIndexable"] = 'PUBLIC_NOT_INDEXABLE'] = "PublicNotIndexable";
        AccessEnum[AccessEnum["HiddenIndexable"] = 'HIDDEN_INDEXABLE'] = "HiddenIndexable";
        AccessEnum[AccessEnum["HiddenNotIndexable"] = 'HIDDEN_NOT_INDEXABLE'] = "HiddenNotIndexable";
        AccessEnum[AccessEnum["HiddenPrivate"] = 'HIDDEN_PRIVATE'] = "HiddenPrivate";
        AccessEnum[AccessEnum["Private"] = 'PRIVATE'] = "Private";
    })(AccessEnum = ImportFromUrlInput.AccessEnum || (ImportFromUrlInput.AccessEnum = {}));
    let DuplicateValidationStrategyEnum;
    (function (DuplicateValidationStrategyEnum) {
        DuplicateValidationStrategyEnum[DuplicateValidationStrategyEnum["None"] = 'NONE'] = "None";
        DuplicateValidationStrategyEnum[DuplicateValidationStrategyEnum["Reject"] = 'REJECT'] = "Reject";
        DuplicateValidationStrategyEnum[DuplicateValidationStrategyEnum["ReturnExisting"] = 'RETURN_EXISTING'] = "ReturnExisting";
    })(DuplicateValidationStrategyEnum = ImportFromUrlInput.DuplicateValidationStrategyEnum || (ImportFromUrlInput.DuplicateValidationStrategyEnum = {}));
    let DuplicateValidationScopeEnum;
    (function (DuplicateValidationScopeEnum) {
        DuplicateValidationScopeEnum[DuplicateValidationScopeEnum["EntirePortal"] = 'ENTIRE_PORTAL'] = "EntirePortal";
        DuplicateValidationScopeEnum[DuplicateValidationScopeEnum["ExactFolder"] = 'EXACT_FOLDER'] = "ExactFolder";
    })(DuplicateValidationScopeEnum = ImportFromUrlInput.DuplicateValidationScopeEnum || (ImportFromUrlInput.DuplicateValidationScopeEnum = {}));
})(ImportFromUrlInput = exports.ImportFromUrlInput || (exports.ImportFromUrlInput = {}));
