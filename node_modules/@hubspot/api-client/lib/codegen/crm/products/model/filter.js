"use strict";
/**
 * Products
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Filter = void 0;
class Filter {
    static getAttributeTypeMap() {
        return Filter.attributeTypeMap;
    }
}
exports.Filter = Filter;
Filter.discriminator = undefined;
Filter.attributeTypeMap = [
    {
        "name": "value",
        "baseName": "value",
        "type": "string"
    },
    {
        "name": "propertyName",
        "baseName": "propertyName",
        "type": "string"
    },
    {
        "name": "operator",
        "baseName": "operator",
        "type": "Filter.OperatorEnum"
    }
];
(function (Filter) {
    let OperatorEnum;
    (function (OperatorEnum) {
        OperatorEnum[OperatorEnum["Eq"] = 'EQ'] = "Eq";
        OperatorEnum[OperatorEnum["Neq"] = 'NEQ'] = "Neq";
        OperatorEnum[OperatorEnum["Lt"] = 'LT'] = "Lt";
        OperatorEnum[OperatorEnum["Lte"] = 'LTE'] = "Lte";
        OperatorEnum[OperatorEnum["Gt"] = 'GT'] = "Gt";
        OperatorEnum[OperatorEnum["Gte"] = 'GTE'] = "Gte";
        OperatorEnum[OperatorEnum["Between"] = 'BETWEEN'] = "Between";
        OperatorEnum[OperatorEnum["In"] = 'IN'] = "In";
        OperatorEnum[OperatorEnum["NotIn"] = 'NOT_IN'] = "NotIn";
        OperatorEnum[OperatorEnum["HasProperty"] = 'HAS_PROPERTY'] = "HasProperty";
        OperatorEnum[OperatorEnum["NotHasProperty"] = 'NOT_HAS_PROPERTY'] = "NotHasProperty";
        OperatorEnum[OperatorEnum["ContainsToken"] = 'CONTAINS_TOKEN'] = "ContainsToken";
        OperatorEnum[OperatorEnum["NotContainsToken"] = 'NOT_CONTAINS_TOKEN'] = "NotContainsToken";
    })(OperatorEnum = Filter.OperatorEnum || (Filter.OperatorEnum = {}));
})(Filter = exports.Filter || (exports.Filter = {}));
